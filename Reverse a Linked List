# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev = None #We have started with no previous noode
        curr = head # Begin from the head of the list

        while curr:
            next_node = curr.next  # Save next node before breaking the link
            curr.next = prev  # Reverse the pointer
            prev = curr     # Move prev to current
            curr = next_node   # Move to next node
        return prev # 'prev' will be the new head
